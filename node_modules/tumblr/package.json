{
  "name": "tumblr",
  "version": "0.2.1",
  "description": "A Node.JS wrapper for the Tumblr API v2",
  "keywords": [
    "blog",
    "tumblr",
    "api",
    "wrapper"
  ],
  "author": {
    "name": "Alexey Simonenko",
    "email": "alexey@simonenko.su"
  },
  "contributors": [
    {
      "name": "Greg Wang",
      "email": "gregwym@qq.com",
      "url": "http://gregwym.info"
    }
  ],
  "homepage": "http://simonenko.su/projects/node-tumblr",
  "main": "./lib/index",
  "repository": {
    "type": "git",
    "url": "https://github.com/meritt/node-tumblr.git"
  },
  "engines": {
    "node": "0.10.x",
    "npm": "1.2.x"
  },
  "dependencies": {
    "request": "2.x"
  },
  "devDependencies": {
    "coffee-script": "1.6.x",
    "nodeunit": "0.8.x"
  },
  "readme": "# Tumblr\n\nA Node.JS wrapper for the [Tumblr API v2](http://www.tumblr.com/docs/en/api/v2).\n\n# Usage\n\n## Install with NPM\n\n\tnpm install tumblr\n\n## Run the Unit Test\n\nFill in the authentication information in `test/user.js`, then run\n\n\tnodeunit test\n\nObviously you must have `nodeunit` installed.\n\n## How to use with JavaScript\n\n```javascript\nvar oauth = {\n\tconsumer_key: 'OAuth Consumer Key',\n\tconsumer_secret: 'OAuth Consumer Secret',\n\ttoken: 'OAuth Access Token',\n\ttoken_secret: 'OAuth Access Token Secret'\n};\n\nvar Blog = require('tumblr').Blog;\nvar blog = new Blog('blog.tumblr.com', oauth);\n\nblog.text({limit: 2}, function(error, response) {\n\tif (error) {\n\t\tthrow new Error(error);\n\t}\n\t\n\tconsole.log(response.posts);\n});\n\nvar User = require('tumblr').User;\nvar user = new User(oauth);\n\nuser.info(function(error, response) {\n\tif (error) {\n\t\tthrow new Error(error);\n\t}\n\t\n\tconsole.log(response.user);\n});\n```\n\n## Or with CoffeeScript\n\n```coffeescript\n{Blog, User} = require 'tumblr'\n\noauth =\n\tconsumer_key: 'OAuth Consumer Key'\n\tconsumer_secret: 'OAuth Consumer Secret'\n\ttoken: 'OAuth Access Token'\n\ttoken_secret: 'OAuth Access Token Secret'\n\nblog = new Blog 'blog.tumblr.com', oauth\n\nblog.text limit: 2, (error, response) ->\n\tthrow new Error error if error\n\tconsole.log response.posts\n\nuser = new User oauth\n\nuser.info (error, response) ->\n\tthrow new Error error if error\n\tconsole.log response.user\n```\n\n# API\n\n## Blog\n\n* info (callback)\n* avatar ([size, ]callback)\n* likes ([options, ]callback)\n* posts ([options, ]callback)\n* text ([options, ]callback)\n* quote ([options, ]callback)\n* link ([options, ]callback)\n* answer ([options, ]callback)\n* video ([options, ]callback)\n* audio ([options, ]callback)\n* photo ([options, ]callback)\n\nOptions list please refer to [Tumblr API v2 - Blog Methods](http://www.tumblr.com/docs/en/api/v2#blog_methods)\n\n## User\n\n* info (callback)\n* dashboard ([options, ]callback)\n* likes ([options, ]callback)\n* following ([options, ]callback)\n\nOptions list please refer to [Tumblr API v2 - User Methods](http://www.tumblr.com/docs/en/api/v2#user-methods)\n\n## Contributors\n\n* [Alexey Simonenko](mailto:alexey@simonenko.su), [simonenko.su](http://simonenko.su)\n* [Greg Wang](https://github.com/gregwym), <http://gregwym.info>\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/meritt/node-tumblr/issues"
  },
  "_id": "tumblr@0.2.1",
  "dist": {
    "shasum": "68bd6a7e67832958a35391c595fb9495c50922e7"
  },
  "_from": "tumblr@latest",
  "_resolved": "https://registry.npmjs.org/tumblr/-/tumblr-0.2.1.tgz"
}
